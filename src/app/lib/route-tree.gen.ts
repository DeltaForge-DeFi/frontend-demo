/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './../routes/__root'

// Create Virtual Routes

const Looping2LazyImport = createFileRoute('/looping2')()
const LoopingLazyImport = createFileRoute('/looping')()
const LiteLazyImport = createFileRoute('/lite')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const Looping2LazyRoute = Looping2LazyImport.update({
  id: '/looping2',
  path: '/looping2',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('../routes/debug.lazy').then((d) => d.Route))

const LoopingLazyRoute = LoopingLazyImport.update({
  id: '/looping',
  path: '/looping',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../routes/looping.lazy').then((d) => d.Route))

const LiteLazyRoute = LiteLazyImport.update({
  id: '/lite',
  path: '/lite',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../routes/lite.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/lite': {
      id: '/lite'
      path: '/lite'
      fullPath: '/lite'
      preLoaderRoute: typeof LiteLazyImport
      parentRoute: typeof rootRoute
    }
    '/looping': {
      id: '/looping'
      path: '/looping'
      fullPath: '/looping'
      preLoaderRoute: typeof LoopingLazyImport
      parentRoute: typeof rootRoute
    }
    '/looping2': {
      id: '/looping2'
      path: '/looping2'
      fullPath: '/looping2'
      preLoaderRoute: typeof Looping2LazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/lite': typeof LiteLazyRoute
  '/looping': typeof LoopingLazyRoute
  '/looping2': typeof Looping2LazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/lite': typeof LiteLazyRoute
  '/looping': typeof LoopingLazyRoute
  '/looping2': typeof Looping2LazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/lite': typeof LiteLazyRoute
  '/looping': typeof LoopingLazyRoute
  '/looping2': typeof Looping2LazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/lite' | '/looping' | '/looping2'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/lite' | '/looping' | '/looping2'
  id: '__root__' | '/' | '/about' | '/lite' | '/looping' | '/looping2'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  LiteLazyRoute: typeof LiteLazyRoute
  LoopingLazyRoute: typeof LoopingLazyRoute
  Looping2LazyRoute: typeof Looping2LazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  LiteLazyRoute: LiteLazyRoute,
  LoopingLazyRoute: LoopingLazyRoute,
  Looping2LazyRoute: Looping2LazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/lite",
        "/looping",
        "/looping2"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/lite": {
      "filePath": "lite.lazy.tsx"
    },
    "/looping": {
      "filePath": "looping.lazy.tsx"
    },
    "/looping2": {
      "filePath": "looping2.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
